description: Retrieves a list of all stock entries for a specific item from the database, including a URI for accessing each individual entry's details.
tags:
  - stocks
parameters:
  - in: path
    name: item
    required: true
    schema:
      type: string
    description: The ID of the item to retrieve stock entries for.
responses:
  "200":
    description: A list of all stock entries for the specified item, each with a URI to access more details.
    content:
      application/json:
        schema:
          type: array
          items:
            $ref: "#/components/schemas/stock"
        example:
          - warehouse_id: "Warehouse1"
            item_id: "Laptop"
            quantity: 100
            uri: "http://example.com/api/stocks/Warehouse1/Laptop"
          - warehouse_id: "Warehouse2"
            item_id: "Laptop"
            quantity: 50
            uri: "http://example.com/api/stocks/Warehouse2/Laptop"
    links:
      ViewItemDetails:
        operationId: getItemDetails
        description: The `GET` method endpoint to retrieve detailed information about the item.
        parameters:
          item_id: $request.path.item
      AddStockForItem:
        operationId: addStock
        description: The `POST` method endpoint to add new stock for this item.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stock'
  "404":
    description: Item does not exist or is out of stock in all warehouses.
    content:
      application/json:
        schema:
          type: object
          properties:
            message:
              type: string
        examples:
          itemNotFound:
            value:
              message: "Item does not exist or is out of stock in all warehouses"
    links:
      ViewAllItems:
        operationId: getAllItems
        description: The `GET` method endpoint to view all items in the inventory, useful for selecting another item or verifying existing items.